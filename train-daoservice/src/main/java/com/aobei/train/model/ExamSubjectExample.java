package com.aobei.train.model;

import com.aobei.train.model.ExamSubjectExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class ExamSubjectExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {
    
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_subject
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public ExamSubjectExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_subject
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_subject
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_subject
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exam_subject
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andExam_subject_idIsNull() {
            addCriterion("exam_subject_id is null");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idIsNotNull() {
            addCriterion("exam_subject_id is not null");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idEqualTo(Long value) {
            addCriterion("exam_subject_id =", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idNotEqualTo(Long value) {
            addCriterion("exam_subject_id <>", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idGreaterThan(Long value) {
            addCriterion("exam_subject_id >", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idGreaterThanOrEqualTo(Long value) {
            addCriterion("exam_subject_id >=", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idLessThan(Long value) {
            addCriterion("exam_subject_id <", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idLessThanOrEqualTo(Long value) {
            addCriterion("exam_subject_id <=", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idIn(List<Long> values) {
            addCriterion("exam_subject_id in", values, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idNotIn(List<Long> values) {
            addCriterion("exam_subject_id not in", values, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idBetween(Long value1, Long value2) {
            addCriterion("exam_subject_id between", value1, value2, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idNotBetween(Long value1, Long value2) {
            addCriterion("exam_subject_id not between", value1, value2, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTime_lengthIsNull() {
            addCriterion("time_length is null");
            return (Criteria) this;
        }

        public Criteria andTime_lengthIsNotNull() {
            addCriterion("time_length is not null");
            return (Criteria) this;
        }

        public Criteria andTime_lengthEqualTo(Integer value) {
            addCriterion("time_length =", value, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthNotEqualTo(Integer value) {
            addCriterion("time_length <>", value, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthGreaterThan(Integer value) {
            addCriterion("time_length >", value, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthGreaterThanOrEqualTo(Integer value) {
            addCriterion("time_length >=", value, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthLessThan(Integer value) {
            addCriterion("time_length <", value, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthLessThanOrEqualTo(Integer value) {
            addCriterion("time_length <=", value, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthIn(List<Integer> values) {
            addCriterion("time_length in", values, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthNotIn(List<Integer> values) {
            addCriterion("time_length not in", values, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthBetween(Integer value1, Integer value2) {
            addCriterion("time_length between", value1, value2, "time_length");
            return (Criteria) this;
        }

        public Criteria andTime_lengthNotBetween(Integer value1, Integer value2) {
            addCriterion("time_length not between", value1, value2, "time_length");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Integer value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Integer value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Integer value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Integer value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Integer value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Integer> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Integer> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Integer value1, Integer value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andNameLikeInsensitive(String value) {
            addCriterion("upper(name) like", value.toUpperCase(), "name");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exam_subject
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 01 11:23:32 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {
        
        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table exam_subject
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
		//[TABLE]	考试科目
		//--------------------------------------------------					
														exam_subject_id(1,Types.BIGINT,false),					
														name(2,Types.VARCHAR,false),
		/** 类型  1 培训前面试, 2 培训考试，3 实习 */	type(2,Types.INTEGER,false),
		/** 占用时长 单位分钟 */						time_length(2,Types.INTEGER,false),
		/** 0 未删除 1 已删除 [DV=>0] */				deleted(2,Types.INTEGER,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}