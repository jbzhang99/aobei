package com.aobei.train.model;

import com.aobei.train.model.PartnerServiceitemExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class PartnerServiceitemExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {
    
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partner__serviceitem
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public PartnerServiceitemExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partner__serviceitem
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partner__serviceitem
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partner__serviceitem
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table partner__serviceitem
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andPartner_idIsNull() {
            addCriterion("partner_id is null");
            return (Criteria) this;
        }

        public Criteria andPartner_idIsNotNull() {
            addCriterion("partner_id is not null");
            return (Criteria) this;
        }

        public Criteria andPartner_idEqualTo(Long value) {
            addCriterion("partner_id =", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotEqualTo(Long value) {
            addCriterion("partner_id <>", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idGreaterThan(Long value) {
            addCriterion("partner_id >", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idGreaterThanOrEqualTo(Long value) {
            addCriterion("partner_id >=", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idLessThan(Long value) {
            addCriterion("partner_id <", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idLessThanOrEqualTo(Long value) {
            addCriterion("partner_id <=", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idIn(List<Long> values) {
            addCriterion("partner_id in", values, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotIn(List<Long> values) {
            addCriterion("partner_id not in", values, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idBetween(Long value1, Long value2) {
            addCriterion("partner_id between", value1, value2, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotBetween(Long value1, Long value2) {
            addCriterion("partner_id not between", value1, value2, "partner_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idIsNull() {
            addCriterion("serviceitem_id is null");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idIsNotNull() {
            addCriterion("serviceitem_id is not null");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idEqualTo(Long value) {
            addCriterion("serviceitem_id =", value, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idNotEqualTo(Long value) {
            addCriterion("serviceitem_id <>", value, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idGreaterThan(Long value) {
            addCriterion("serviceitem_id >", value, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idGreaterThanOrEqualTo(Long value) {
            addCriterion("serviceitem_id >=", value, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idLessThan(Long value) {
            addCriterion("serviceitem_id <", value, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idLessThanOrEqualTo(Long value) {
            addCriterion("serviceitem_id <=", value, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idIn(List<Long> values) {
            addCriterion("serviceitem_id in", values, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idNotIn(List<Long> values) {
            addCriterion("serviceitem_id not in", values, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idBetween(Long value1, Long value2) {
            addCriterion("serviceitem_id between", value1, value2, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andServiceitem_idNotBetween(Long value1, Long value2) {
            addCriterion("serviceitem_id not between", value1, value2, "serviceitem_id");
            return (Criteria) this;
        }

        public Criteria andNoneIsNull() {
            addCriterion("none is null");
            return (Criteria) this;
        }

        public Criteria andNoneIsNotNull() {
            addCriterion("none is not null");
            return (Criteria) this;
        }

        public Criteria andNoneEqualTo(Byte value) {
            addCriterion("none =", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotEqualTo(Byte value) {
            addCriterion("none <>", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneGreaterThan(Byte value) {
            addCriterion("none >", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneGreaterThanOrEqualTo(Byte value) {
            addCriterion("none >=", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLessThan(Byte value) {
            addCriterion("none <", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLessThanOrEqualTo(Byte value) {
            addCriterion("none <=", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneIn(List<Byte> values) {
            addCriterion("none in", values, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotIn(List<Byte> values) {
            addCriterion("none not in", values, "none");
            return (Criteria) this;
        }

        public Criteria andNoneBetween(Byte value1, Byte value2) {
            addCriterion("none between", value1, value2, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotBetween(Byte value1, Byte value2) {
            addCriterion("none not between", value1, value2, "none");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table partner__serviceitem
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 01 11:23:32 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {
        
        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table partner__serviceitem
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
		//[TABLE]	合伙人 服务项关联表
		//--------------------------------------------------
		/** 合伙人编号 */			partner_id(1,Types.BIGINT,false),
		/** 服务项id */				serviceitem_id(1,Types.BIGINT,false),					
									none(2,Types.TINYINT,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}