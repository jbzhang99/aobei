package com.aobei.train.model;

import com.aobei.train.model.ExamApplyExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class ExamApplyExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {
    
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_apply
     *
     * @mbg.generated Tue Feb 06 10:01:25 CST 2018
     */
    public ExamApplyExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_apply
     *
     * @mbg.generated Tue Feb 06 10:01:25 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_apply
     *
     * @mbg.generated Tue Feb 06 10:01:25 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_apply
     *
     * @mbg.generated Tue Feb 06 10:01:25 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exam_apply
     *
     * @mbg.generated Tue Feb 06 10:01:25 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andExam_apply_idIsNull() {
            addCriterion("exam_apply_id is null");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idIsNotNull() {
            addCriterion("exam_apply_id is not null");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idEqualTo(Long value) {
            addCriterion("exam_apply_id =", value, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idNotEqualTo(Long value) {
            addCriterion("exam_apply_id <>", value, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idGreaterThan(Long value) {
            addCriterion("exam_apply_id >", value, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idGreaterThanOrEqualTo(Long value) {
            addCriterion("exam_apply_id >=", value, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idLessThan(Long value) {
            addCriterion("exam_apply_id <", value, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idLessThanOrEqualTo(Long value) {
            addCriterion("exam_apply_id <=", value, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idIn(List<Long> values) {
            addCriterion("exam_apply_id in", values, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idNotIn(List<Long> values) {
            addCriterion("exam_apply_id not in", values, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idBetween(Long value1, Long value2) {
            addCriterion("exam_apply_id between", value1, value2, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andExam_apply_idNotBetween(Long value1, Long value2) {
            addCriterion("exam_apply_id not between", value1, value2, "exam_apply_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idIsNull() {
            addCriterion("train_plan_id is null");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idIsNotNull() {
            addCriterion("train_plan_id is not null");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idEqualTo(Long value) {
            addCriterion("train_plan_id =", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idNotEqualTo(Long value) {
            addCriterion("train_plan_id <>", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idGreaterThan(Long value) {
            addCriterion("train_plan_id >", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idGreaterThanOrEqualTo(Long value) {
            addCriterion("train_plan_id >=", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idLessThan(Long value) {
            addCriterion("train_plan_id <", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idLessThanOrEqualTo(Long value) {
            addCriterion("train_plan_id <=", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idIn(List<Long> values) {
            addCriterion("train_plan_id in", values, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idNotIn(List<Long> values) {
            addCriterion("train_plan_id not in", values, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idBetween(Long value1, Long value2) {
            addCriterion("train_plan_id between", value1, value2, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idNotBetween(Long value1, Long value2) {
            addCriterion("train_plan_id not between", value1, value2, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idIsNull() {
            addCriterion("exam_plan_id is null");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idIsNotNull() {
            addCriterion("exam_plan_id is not null");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idEqualTo(Long value) {
            addCriterion("exam_plan_id =", value, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idNotEqualTo(Long value) {
            addCriterion("exam_plan_id <>", value, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idGreaterThan(Long value) {
            addCriterion("exam_plan_id >", value, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idGreaterThanOrEqualTo(Long value) {
            addCriterion("exam_plan_id >=", value, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idLessThan(Long value) {
            addCriterion("exam_plan_id <", value, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idLessThanOrEqualTo(Long value) {
            addCriterion("exam_plan_id <=", value, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idIn(List<Long> values) {
            addCriterion("exam_plan_id in", values, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idNotIn(List<Long> values) {
            addCriterion("exam_plan_id not in", values, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idBetween(Long value1, Long value2) {
            addCriterion("exam_plan_id between", value1, value2, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andExam_plan_idNotBetween(Long value1, Long value2) {
            addCriterion("exam_plan_id not between", value1, value2, "exam_plan_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudent_idIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudent_idEqualTo(Long value) {
            addCriterion("student_id =", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idNotEqualTo(Long value) {
            addCriterion("student_id <>", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idGreaterThan(Long value) {
            addCriterion("student_id >", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idGreaterThanOrEqualTo(Long value) {
            addCriterion("student_id >=", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idLessThan(Long value) {
            addCriterion("student_id <", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idLessThanOrEqualTo(Long value) {
            addCriterion("student_id <=", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idIn(List<Long> values) {
            addCriterion("student_id in", values, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idNotIn(List<Long> values) {
            addCriterion("student_id not in", values, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idBetween(Long value1, Long value2) {
            addCriterion("student_id between", value1, value2, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idNotBetween(Long value1, Long value2) {
            addCriterion("student_id not between", value1, value2, "student_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idIsNull() {
            addCriterion("partner_id is null");
            return (Criteria) this;
        }

        public Criteria andPartner_idIsNotNull() {
            addCriterion("partner_id is not null");
            return (Criteria) this;
        }

        public Criteria andPartner_idEqualTo(Long value) {
            addCriterion("partner_id =", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotEqualTo(Long value) {
            addCriterion("partner_id <>", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idGreaterThan(Long value) {
            addCriterion("partner_id >", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idGreaterThanOrEqualTo(Long value) {
            addCriterion("partner_id >=", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idLessThan(Long value) {
            addCriterion("partner_id <", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idLessThanOrEqualTo(Long value) {
            addCriterion("partner_id <=", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idIn(List<Long> values) {
            addCriterion("partner_id in", values, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotIn(List<Long> values) {
            addCriterion("partner_id not in", values, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idBetween(Long value1, Long value2) {
            addCriterion("partner_id between", value1, value2, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotBetween(Long value1, Long value2) {
            addCriterion("partner_id not between", value1, value2, "partner_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idIsNull() {
            addCriterion("exam_subject_id is null");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idIsNotNull() {
            addCriterion("exam_subject_id is not null");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idEqualTo(Long value) {
            addCriterion("exam_subject_id =", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idNotEqualTo(Long value) {
            addCriterion("exam_subject_id <>", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idGreaterThan(Long value) {
            addCriterion("exam_subject_id >", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idGreaterThanOrEqualTo(Long value) {
            addCriterion("exam_subject_id >=", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idLessThan(Long value) {
            addCriterion("exam_subject_id <", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idLessThanOrEqualTo(Long value) {
            addCriterion("exam_subject_id <=", value, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idIn(List<Long> values) {
            addCriterion("exam_subject_id in", values, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idNotIn(List<Long> values) {
            addCriterion("exam_subject_id not in", values, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idBetween(Long value1, Long value2) {
            addCriterion("exam_subject_id between", value1, value2, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andExam_subject_idNotBetween(Long value1, Long value2) {
            addCriterion("exam_subject_id not between", value1, value2, "exam_subject_id");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeIsNull() {
            addCriterion("apply_datetime is null");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeIsNotNull() {
            addCriterion("apply_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeEqualTo(Date value) {
            addCriterion("apply_datetime =", value, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeNotEqualTo(Date value) {
            addCriterion("apply_datetime <>", value, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeGreaterThan(Date value) {
            addCriterion("apply_datetime >", value, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("apply_datetime >=", value, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeLessThan(Date value) {
            addCriterion("apply_datetime <", value, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeLessThanOrEqualTo(Date value) {
            addCriterion("apply_datetime <=", value, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeIn(List<Date> values) {
            addCriterion("apply_datetime in", values, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeNotIn(List<Date> values) {
            addCriterion("apply_datetime not in", values, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeBetween(Date value1, Date value2) {
            addCriterion("apply_datetime between", value1, value2, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andApply_datetimeNotBetween(Date value1, Date value2) {
            addCriterion("apply_datetime not between", value1, value2, "apply_datetime");
            return (Criteria) this;
        }

        public Criteria andId_checkIsNull() {
            addCriterion("id_check is null");
            return (Criteria) this;
        }

        public Criteria andId_checkIsNotNull() {
            addCriterion("id_check is not null");
            return (Criteria) this;
        }

        public Criteria andId_checkEqualTo(Byte value) {
            addCriterion("id_check =", value, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkNotEqualTo(Byte value) {
            addCriterion("id_check <>", value, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkGreaterThan(Byte value) {
            addCriterion("id_check >", value, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkGreaterThanOrEqualTo(Byte value) {
            addCriterion("id_check >=", value, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkLessThan(Byte value) {
            addCriterion("id_check <", value, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkLessThanOrEqualTo(Byte value) {
            addCriterion("id_check <=", value, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkIn(List<Byte> values) {
            addCriterion("id_check in", values, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkNotIn(List<Byte> values) {
            addCriterion("id_check not in", values, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkBetween(Byte value1, Byte value2) {
            addCriterion("id_check between", value1, value2, "id_check");
            return (Criteria) this;
        }

        public Criteria andId_checkNotBetween(Byte value1, Byte value2) {
            addCriterion("id_check not between", value1, value2, "id_check");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("score is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("score is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(Integer value) {
            addCriterion("score =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(Integer value) {
            addCriterion("score <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(Integer value) {
            addCriterion("score >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("score >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(Integer value) {
            addCriterion("score <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(Integer value) {
            addCriterion("score <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<Integer> values) {
            addCriterion("score in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<Integer> values) {
            addCriterion("score not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(Integer value1, Integer value2) {
            addCriterion("score between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("score not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andPassedIsNull() {
            addCriterion("passed is null");
            return (Criteria) this;
        }

        public Criteria andPassedIsNotNull() {
            addCriterion("passed is not null");
            return (Criteria) this;
        }

        public Criteria andPassedEqualTo(Byte value) {
            addCriterion("passed =", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedNotEqualTo(Byte value) {
            addCriterion("passed <>", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedGreaterThan(Byte value) {
            addCriterion("passed >", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedGreaterThanOrEqualTo(Byte value) {
            addCriterion("passed >=", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedLessThan(Byte value) {
            addCriterion("passed <", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedLessThanOrEqualTo(Byte value) {
            addCriterion("passed <=", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedIn(List<Byte> values) {
            addCriterion("passed in", values, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedNotIn(List<Byte> values) {
            addCriterion("passed not in", values, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedBetween(Byte value1, Byte value2) {
            addCriterion("passed between", value1, value2, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedNotBetween(Byte value1, Byte value2) {
            addCriterion("passed not between", value1, value2, "passed");
            return (Criteria) this;
        }

        public Criteria andExam_dateIsNull() {
            addCriterion("exam_date is null");
            return (Criteria) this;
        }

        public Criteria andExam_dateIsNotNull() {
            addCriterion("exam_date is not null");
            return (Criteria) this;
        }

        public Criteria andExam_dateEqualTo(Date value) {
            addCriterionForJDBCDate("exam_date =", value, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateNotEqualTo(Date value) {
            addCriterionForJDBCDate("exam_date <>", value, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateGreaterThan(Date value) {
            addCriterionForJDBCDate("exam_date >", value, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("exam_date >=", value, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateLessThan(Date value) {
            addCriterionForJDBCDate("exam_date <", value, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("exam_date <=", value, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateIn(List<Date> values) {
            addCriterionForJDBCDate("exam_date in", values, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateNotIn(List<Date> values) {
            addCriterionForJDBCDate("exam_date not in", values, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("exam_date between", value1, value2, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_dateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("exam_date not between", value1, value2, "exam_date");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeIsNull() {
            addCriterion("exam_start_time is null");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeIsNotNull() {
            addCriterion("exam_start_time is not null");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeEqualTo(Date value) {
            addCriterion("exam_start_time =", value, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeNotEqualTo(Date value) {
            addCriterion("exam_start_time <>", value, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeGreaterThan(Date value) {
            addCriterion("exam_start_time >", value, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeGreaterThanOrEqualTo(Date value) {
            addCriterion("exam_start_time >=", value, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeLessThan(Date value) {
            addCriterion("exam_start_time <", value, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeLessThanOrEqualTo(Date value) {
            addCriterion("exam_start_time <=", value, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeIn(List<Date> values) {
            addCriterion("exam_start_time in", values, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeNotIn(List<Date> values) {
            addCriterion("exam_start_time not in", values, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeBetween(Date value1, Date value2) {
            addCriterion("exam_start_time between", value1, value2, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_start_timeNotBetween(Date value1, Date value2) {
            addCriterion("exam_start_time not between", value1, value2, "exam_start_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeIsNull() {
            addCriterion("exam_end_time is null");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeIsNotNull() {
            addCriterion("exam_end_time is not null");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeEqualTo(Date value) {
            addCriterion("exam_end_time =", value, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeNotEqualTo(Date value) {
            addCriterion("exam_end_time <>", value, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeGreaterThan(Date value) {
            addCriterion("exam_end_time >", value, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeGreaterThanOrEqualTo(Date value) {
            addCriterion("exam_end_time >=", value, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeLessThan(Date value) {
            addCriterion("exam_end_time <", value, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeLessThanOrEqualTo(Date value) {
            addCriterion("exam_end_time <=", value, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeIn(List<Date> values) {
            addCriterion("exam_end_time in", values, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeNotIn(List<Date> values) {
            addCriterion("exam_end_time not in", values, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeBetween(Date value1, Date value2) {
            addCriterion("exam_end_time between", value1, value2, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andExam_end_timeNotBetween(Date value1, Date value2) {
            addCriterion("exam_end_time not between", value1, value2, "exam_end_time");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Integer value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Integer value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Integer value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Integer value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Integer value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Integer> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Integer> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Integer value1, Integer value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exam_apply
     *
     * @mbg.generated do_not_delete_during_merge Tue Feb 06 10:01:25 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {
        
        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table exam_apply
     *
     * @mbg.generated Tue Feb 06 10:01:25 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
		//[TABLE]	考试申请（报考）
		//--------------------------------------------------					
														exam_apply_id(1,Types.BIGINT,false),
		/** 培训计划id,可以为空 */						train_plan_id(2,Types.BIGINT,false),
		/** 考试计划id */								exam_plan_id(2,Types.BIGINT,false),
		/** 学员id */									student_id(2,Types.BIGINT,false),
		/** 对应学员的合伙人id */						partner_id(2,Types.BIGINT,false),
		/** 考试科目id */								exam_subject_id(2,Types.BIGINT,false),
		/** 申请日期 */									apply_datetime(2,Types.TIMESTAMP,false),
		/** 身份核对状态 0 失败 1 成功 */				id_check(2,Types.TINYINT,false),
		/** 考试得分 */									score(2,Types.INTEGER,false),
		/** 考试是否通过  0 未通过  1 通过 */			passed(2,Types.TINYINT,false),
		/** 开考日期 */									exam_date(2,Types.DATE,false),
		/** 开考时间 */									exam_start_time(2,Types.TIMESTAMP,false),
		/** 结束时间 */									exam_end_time(2,Types.TIMESTAMP,false),
		/** 0 未删除 1 已删除 [DV=>0] */				deleted(2,Types.INTEGER,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}