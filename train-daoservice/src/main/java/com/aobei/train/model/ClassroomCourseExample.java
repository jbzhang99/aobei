package com.aobei.train.model;

import com.aobei.train.model.ClassroomCourseExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class ClassroomCourseExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {
    
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom__course
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public ClassroomCourseExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom__course
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom__course
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom__course
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classroom__course
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andCourse_idIsNull() {
            addCriterion("course_id is null");
            return (Criteria) this;
        }

        public Criteria andCourse_idIsNotNull() {
            addCriterion("course_id is not null");
            return (Criteria) this;
        }

        public Criteria andCourse_idEqualTo(Long value) {
            addCriterion("course_id =", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idNotEqualTo(Long value) {
            addCriterion("course_id <>", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idGreaterThan(Long value) {
            addCriterion("course_id >", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idGreaterThanOrEqualTo(Long value) {
            addCriterion("course_id >=", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idLessThan(Long value) {
            addCriterion("course_id <", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idLessThanOrEqualTo(Long value) {
            addCriterion("course_id <=", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idIn(List<Long> values) {
            addCriterion("course_id in", values, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idNotIn(List<Long> values) {
            addCriterion("course_id not in", values, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idBetween(Long value1, Long value2) {
            addCriterion("course_id between", value1, value2, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idNotBetween(Long value1, Long value2) {
            addCriterion("course_id not between", value1, value2, "course_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idIsNull() {
            addCriterion("classroom_id is null");
            return (Criteria) this;
        }

        public Criteria andClassroom_idIsNotNull() {
            addCriterion("classroom_id is not null");
            return (Criteria) this;
        }

        public Criteria andClassroom_idEqualTo(Long value) {
            addCriterion("classroom_id =", value, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idNotEqualTo(Long value) {
            addCriterion("classroom_id <>", value, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idGreaterThan(Long value) {
            addCriterion("classroom_id >", value, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idGreaterThanOrEqualTo(Long value) {
            addCriterion("classroom_id >=", value, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idLessThan(Long value) {
            addCriterion("classroom_id <", value, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idLessThanOrEqualTo(Long value) {
            addCriterion("classroom_id <=", value, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idIn(List<Long> values) {
            addCriterion("classroom_id in", values, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idNotIn(List<Long> values) {
            addCriterion("classroom_id not in", values, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idBetween(Long value1, Long value2) {
            addCriterion("classroom_id between", value1, value2, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andClassroom_idNotBetween(Long value1, Long value2) {
            addCriterion("classroom_id not between", value1, value2, "classroom_id");
            return (Criteria) this;
        }

        public Criteria andNoneIsNull() {
            addCriterion("none is null");
            return (Criteria) this;
        }

        public Criteria andNoneIsNotNull() {
            addCriterion("none is not null");
            return (Criteria) this;
        }

        public Criteria andNoneEqualTo(Byte value) {
            addCriterion("none =", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotEqualTo(Byte value) {
            addCriterion("none <>", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneGreaterThan(Byte value) {
            addCriterion("none >", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneGreaterThanOrEqualTo(Byte value) {
            addCriterion("none >=", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLessThan(Byte value) {
            addCriterion("none <", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLessThanOrEqualTo(Byte value) {
            addCriterion("none <=", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneIn(List<Byte> values) {
            addCriterion("none in", values, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotIn(List<Byte> values) {
            addCriterion("none not in", values, "none");
            return (Criteria) this;
        }

        public Criteria andNoneBetween(Byte value1, Byte value2) {
            addCriterion("none between", value1, value2, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotBetween(Byte value1, Byte value2) {
            addCriterion("none not between", value1, value2, "none");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classroom__course
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 01 11:23:32 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {
        
        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table classroom__course
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
		//[TABLE]	教室支持的课程
		//--------------------------------------------------					
								course_id(1,Types.BIGINT,false),					
								classroom_id(1,Types.BIGINT,false),
		/** 无用字段 */			none(2,Types.TINYINT,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}