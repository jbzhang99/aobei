package com.aobei.train.model;

import com.aobei.train.model.RobbingExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class RobbingExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {

    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table robbing
     *
     * @mbg.generated Mon Jul 16 11:46:13 CST 2018
     */
    public RobbingExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table robbing
     *
     * @mbg.generated Mon Jul 16 11:46:13 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table robbing
     *
     * @mbg.generated Mon Jul 16 11:46:13 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table robbing
     *
     * @mbg.generated Mon Jul 16 11:46:13 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table robbing
     *
     * @mbg.generated Mon Jul 16 11:46:13 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andRobbing_idIsNull() {
            addCriterion("robbing_id is null");
            return (Criteria) this;
        }

        public Criteria andRobbing_idIsNotNull() {
            addCriterion("robbing_id is not null");
            return (Criteria) this;
        }

        public Criteria andRobbing_idEqualTo(Long value) {
            addCriterion("robbing_id =", value, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idNotEqualTo(Long value) {
            addCriterion("robbing_id <>", value, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idGreaterThan(Long value) {
            addCriterion("robbing_id >", value, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idGreaterThanOrEqualTo(Long value) {
            addCriterion("robbing_id >=", value, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idLessThan(Long value) {
            addCriterion("robbing_id <", value, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idLessThanOrEqualTo(Long value) {
            addCriterion("robbing_id <=", value, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idIn(List<Long> values) {
            addCriterion("robbing_id in", values, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idNotIn(List<Long> values) {
            addCriterion("robbing_id not in", values, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idBetween(Long value1, Long value2) {
            addCriterion("robbing_id between", value1, value2, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andRobbing_idNotBetween(Long value1, Long value2) {
            addCriterion("robbing_id not between", value1, value2, "robbing_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idIsNull() {
            addCriterion("serviceunit_id is null");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idIsNotNull() {
            addCriterion("serviceunit_id is not null");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idEqualTo(Long value) {
            addCriterion("serviceunit_id =", value, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idNotEqualTo(Long value) {
            addCriterion("serviceunit_id <>", value, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idGreaterThan(Long value) {
            addCriterion("serviceunit_id >", value, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idGreaterThanOrEqualTo(Long value) {
            addCriterion("serviceunit_id >=", value, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idLessThan(Long value) {
            addCriterion("serviceunit_id <", value, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idLessThanOrEqualTo(Long value) {
            addCriterion("serviceunit_id <=", value, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idIn(List<Long> values) {
            addCriterion("serviceunit_id in", values, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idNotIn(List<Long> values) {
            addCriterion("serviceunit_id not in", values, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idBetween(Long value1, Long value2) {
            addCriterion("serviceunit_id between", value1, value2, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andServiceunit_idNotBetween(Long value1, Long value2) {
            addCriterion("serviceunit_id not between", value1, value2, "serviceunit_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idIsNull() {
            addCriterion("partner_id is null");
            return (Criteria) this;
        }

        public Criteria andPartner_idIsNotNull() {
            addCriterion("partner_id is not null");
            return (Criteria) this;
        }

        public Criteria andPartner_idEqualTo(Long value) {
            addCriterion("partner_id =", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotEqualTo(Long value) {
            addCriterion("partner_id <>", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idGreaterThan(Long value) {
            addCriterion("partner_id >", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idGreaterThanOrEqualTo(Long value) {
            addCriterion("partner_id >=", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idLessThan(Long value) {
            addCriterion("partner_id <", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idLessThanOrEqualTo(Long value) {
            addCriterion("partner_id <=", value, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idIn(List<Long> values) {
            addCriterion("partner_id in", values, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotIn(List<Long> values) {
            addCriterion("partner_id not in", values, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idBetween(Long value1, Long value2) {
            addCriterion("partner_id between", value1, value2, "partner_id");
            return (Criteria) this;
        }

        public Criteria andPartner_idNotBetween(Long value1, Long value2) {
            addCriterion("partner_id not between", value1, value2, "partner_id");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeIsNull() {
            addCriterion("create_datetime is null");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeIsNotNull() {
            addCriterion("create_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeEqualTo(Date value) {
            addCriterion("create_datetime =", value, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeNotEqualTo(Date value) {
            addCriterion("create_datetime <>", value, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeGreaterThan(Date value) {
            addCriterion("create_datetime >", value, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_datetime >=", value, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeLessThan(Date value) {
            addCriterion("create_datetime <", value, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeLessThanOrEqualTo(Date value) {
            addCriterion("create_datetime <=", value, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeIn(List<Date> values) {
            addCriterion("create_datetime in", values, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeNotIn(List<Date> values) {
            addCriterion("create_datetime not in", values, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeBetween(Date value1, Date value2) {
            addCriterion("create_datetime between", value1, value2, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andCreate_datetimeNotBetween(Date value1, Date value2) {
            addCriterion("create_datetime not between", value1, value2, "create_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeIsNull() {
            addCriterion("expire_datetime is null");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeIsNotNull() {
            addCriterion("expire_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeEqualTo(Date value) {
            addCriterion("expire_datetime =", value, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeNotEqualTo(Date value) {
            addCriterion("expire_datetime <>", value, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeGreaterThan(Date value) {
            addCriterion("expire_datetime >", value, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("expire_datetime >=", value, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeLessThan(Date value) {
            addCriterion("expire_datetime <", value, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeLessThanOrEqualTo(Date value) {
            addCriterion("expire_datetime <=", value, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeIn(List<Date> values) {
            addCriterion("expire_datetime in", values, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeNotIn(List<Date> values) {
            addCriterion("expire_datetime not in", values, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeBetween(Date value1, Date value2) {
            addCriterion("expire_datetime between", value1, value2, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andExpire_datetimeNotBetween(Date value1, Date value2) {
            addCriterion("expire_datetime not between", value1, value2, "expire_datetime");
            return (Criteria) this;
        }

        public Criteria andActivedIsNull() {
            addCriterion("actived is null");
            return (Criteria) this;
        }

        public Criteria andActivedIsNotNull() {
            addCriterion("actived is not null");
            return (Criteria) this;
        }

        public Criteria andActivedEqualTo(Integer value) {
            addCriterion("actived =", value, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedNotEqualTo(Integer value) {
            addCriterion("actived <>", value, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedGreaterThan(Integer value) {
            addCriterion("actived >", value, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedGreaterThanOrEqualTo(Integer value) {
            addCriterion("actived >=", value, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedLessThan(Integer value) {
            addCriterion("actived <", value, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedLessThanOrEqualTo(Integer value) {
            addCriterion("actived <=", value, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedIn(List<Integer> values) {
            addCriterion("actived in", values, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedNotIn(List<Integer> values) {
            addCriterion("actived not in", values, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedBetween(Integer value1, Integer value2) {
            addCriterion("actived between", value1, value2, "actived");
            return (Criteria) this;
        }

        public Criteria andActivedNotBetween(Integer value1, Integer value2) {
            addCriterion("actived not between", value1, value2, "actived");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andUnique_keyIsNull() {
            addCriterion("unique_key is null");
            return (Criteria) this;
        }

        public Criteria andUnique_keyIsNotNull() {
            addCriterion("unique_key is not null");
            return (Criteria) this;
        }

        public Criteria andUnique_keyEqualTo(String value) {
            addCriterion("unique_key =", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyNotEqualTo(String value) {
            addCriterion("unique_key <>", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyGreaterThan(String value) {
            addCriterion("unique_key >", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyGreaterThanOrEqualTo(String value) {
            addCriterion("unique_key >=", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyLessThan(String value) {
            addCriterion("unique_key <", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyLessThanOrEqualTo(String value) {
            addCriterion("unique_key <=", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyLike(String value) {
            addCriterion("unique_key like", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyNotLike(String value) {
            addCriterion("unique_key not like", value, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyIn(List<String> values) {
            addCriterion("unique_key in", values, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyNotIn(List<String> values) {
            addCriterion("unique_key not in", values, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyBetween(String value1, String value2) {
            addCriterion("unique_key between", value1, value2, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyNotBetween(String value1, String value2) {
            addCriterion("unique_key not between", value1, value2, "unique_key");
            return (Criteria) this;
        }

        public Criteria andUnique_keyLikeInsensitive(String value) {
            addCriterion("upper(unique_key) like", value.toUpperCase(), "unique_key");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table robbing
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 16 11:46:13 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table robbing
     *
     * @mbg.generated Mon Jul 16 11:46:13 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
        //[TABLE]	服务单  抢单记录
        //--------------------------------------------------
        robbing_id(1,Types.BIGINT,false),
        /** 服务单id */							serviceunit_id(2,Types.BIGINT,false),
        /** 合伙人id */							partner_id(2,Types.BIGINT,false),
        /** 创建时间 */							create_datetime(2,Types.TIMESTAMP,false),
        /** 过期时间 */							expire_datetime(2,Types.TIMESTAMP,false),
        /** 是否抢中   1 是  0 否 */			actived(2,Types.INTEGER,false),
        /** 是否有效    1 是  0 否 */			status(2,Types.INTEGER,false),
        /** 作为唯一值，防止重复插入 */			unique_key(2,Types.VARCHAR,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}