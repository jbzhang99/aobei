package com.aobei.train.model;

import com.aobei.train.model.PlanStudentExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class PlanStudentExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {
    
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table train_plan__student
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public PlanStudentExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table train_plan__student
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table train_plan__student
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table train_plan__student
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table train_plan__student
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andTrain_plan_idIsNull() {
            addCriterion("train_plan_id is null");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idIsNotNull() {
            addCriterion("train_plan_id is not null");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idEqualTo(Long value) {
            addCriterion("train_plan_id =", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idNotEqualTo(Long value) {
            addCriterion("train_plan_id <>", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idGreaterThan(Long value) {
            addCriterion("train_plan_id >", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idGreaterThanOrEqualTo(Long value) {
            addCriterion("train_plan_id >=", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idLessThan(Long value) {
            addCriterion("train_plan_id <", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idLessThanOrEqualTo(Long value) {
            addCriterion("train_plan_id <=", value, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idIn(List<Long> values) {
            addCriterion("train_plan_id in", values, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idNotIn(List<Long> values) {
            addCriterion("train_plan_id not in", values, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idBetween(Long value1, Long value2) {
            addCriterion("train_plan_id between", value1, value2, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andTrain_plan_idNotBetween(Long value1, Long value2) {
            addCriterion("train_plan_id not between", value1, value2, "train_plan_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudent_idIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudent_idEqualTo(Long value) {
            addCriterion("student_id =", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idNotEqualTo(Long value) {
            addCriterion("student_id <>", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idGreaterThan(Long value) {
            addCriterion("student_id >", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idGreaterThanOrEqualTo(Long value) {
            addCriterion("student_id >=", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idLessThan(Long value) {
            addCriterion("student_id <", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idLessThanOrEqualTo(Long value) {
            addCriterion("student_id <=", value, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idIn(List<Long> values) {
            addCriterion("student_id in", values, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idNotIn(List<Long> values) {
            addCriterion("student_id not in", values, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idBetween(Long value1, Long value2) {
            addCriterion("student_id between", value1, value2, "student_id");
            return (Criteria) this;
        }

        public Criteria andStudent_idNotBetween(Long value1, Long value2) {
            addCriterion("student_id not between", value1, value2, "student_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idIsNull() {
            addCriterion("course_id is null");
            return (Criteria) this;
        }

        public Criteria andCourse_idIsNotNull() {
            addCriterion("course_id is not null");
            return (Criteria) this;
        }

        public Criteria andCourse_idEqualTo(Long value) {
            addCriterion("course_id =", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idNotEqualTo(Long value) {
            addCriterion("course_id <>", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idGreaterThan(Long value) {
            addCriterion("course_id >", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idGreaterThanOrEqualTo(Long value) {
            addCriterion("course_id >=", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idLessThan(Long value) {
            addCriterion("course_id <", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idLessThanOrEqualTo(Long value) {
            addCriterion("course_id <=", value, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idIn(List<Long> values) {
            addCriterion("course_id in", values, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idNotIn(List<Long> values) {
            addCriterion("course_id not in", values, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idBetween(Long value1, Long value2) {
            addCriterion("course_id between", value1, value2, "course_id");
            return (Criteria) this;
        }

        public Criteria andCourse_idNotBetween(Long value1, Long value2) {
            addCriterion("course_id not between", value1, value2, "course_id");
            return (Criteria) this;
        }

        public Criteria andTrain_beginIsNull() {
            addCriterion("train_begin is null");
            return (Criteria) this;
        }

        public Criteria andTrain_beginIsNotNull() {
            addCriterion("train_begin is not null");
            return (Criteria) this;
        }

        public Criteria andTrain_beginEqualTo(Date value) {
            addCriterion("train_begin =", value, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginNotEqualTo(Date value) {
            addCriterion("train_begin <>", value, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginGreaterThan(Date value) {
            addCriterion("train_begin >", value, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginGreaterThanOrEqualTo(Date value) {
            addCriterion("train_begin >=", value, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginLessThan(Date value) {
            addCriterion("train_begin <", value, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginLessThanOrEqualTo(Date value) {
            addCriterion("train_begin <=", value, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginIn(List<Date> values) {
            addCriterion("train_begin in", values, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginNotIn(List<Date> values) {
            addCriterion("train_begin not in", values, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginBetween(Date value1, Date value2) {
            addCriterion("train_begin between", value1, value2, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_beginNotBetween(Date value1, Date value2) {
            addCriterion("train_begin not between", value1, value2, "train_begin");
            return (Criteria) this;
        }

        public Criteria andTrain_endIsNull() {
            addCriterion("train_end is null");
            return (Criteria) this;
        }

        public Criteria andTrain_endIsNotNull() {
            addCriterion("train_end is not null");
            return (Criteria) this;
        }

        public Criteria andTrain_endEqualTo(Date value) {
            addCriterion("train_end =", value, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endNotEqualTo(Date value) {
            addCriterion("train_end <>", value, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endGreaterThan(Date value) {
            addCriterion("train_end >", value, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endGreaterThanOrEqualTo(Date value) {
            addCriterion("train_end >=", value, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endLessThan(Date value) {
            addCriterion("train_end <", value, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endLessThanOrEqualTo(Date value) {
            addCriterion("train_end <=", value, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endIn(List<Date> values) {
            addCriterion("train_end in", values, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endNotIn(List<Date> values) {
            addCriterion("train_end not in", values, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endBetween(Date value1, Date value2) {
            addCriterion("train_end between", value1, value2, "train_end");
            return (Criteria) this;
        }

        public Criteria andTrain_endNotBetween(Date value1, Date value2) {
            addCriterion("train_end not between", value1, value2, "train_end");
            return (Criteria) this;
        }

        public Criteria andPassedIsNull() {
            addCriterion("passed is null");
            return (Criteria) this;
        }

        public Criteria andPassedIsNotNull() {
            addCriterion("passed is not null");
            return (Criteria) this;
        }

        public Criteria andPassedEqualTo(Integer value) {
            addCriterion("passed =", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedNotEqualTo(Integer value) {
            addCriterion("passed <>", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedGreaterThan(Integer value) {
            addCriterion("passed >", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedGreaterThanOrEqualTo(Integer value) {
            addCriterion("passed >=", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedLessThan(Integer value) {
            addCriterion("passed <", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedLessThanOrEqualTo(Integer value) {
            addCriterion("passed <=", value, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedIn(List<Integer> values) {
            addCriterion("passed in", values, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedNotIn(List<Integer> values) {
            addCriterion("passed not in", values, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedBetween(Integer value1, Integer value2) {
            addCriterion("passed between", value1, value2, "passed");
            return (Criteria) this;
        }

        public Criteria andPassedNotBetween(Integer value1, Integer value2) {
            addCriterion("passed not between", value1, value2, "passed");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Integer value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Integer value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Integer value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Integer value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Integer value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Integer value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Integer> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Integer> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Integer value1, Integer value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Integer value1, Integer value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table train_plan__student
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 01 11:23:32 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {
        
        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table train_plan__student
     *
     * @mbg.generated Thu Feb 01 11:23:32 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
		//[TABLE]	学员培训计划关联
		//--------------------------------------------------
		/** 培训计划id */							train_plan_id(1,Types.BIGINT,false),
		/** 学员id */								student_id(1,Types.BIGINT,false),
		/** 课程id */								course_id(2,Types.BIGINT,false),
		/** 培训开始时间 */							train_begin(2,Types.TIMESTAMP,false),
		/** 培训结束时间 */							train_end(2,Types.TIMESTAMP,false),
		/** 是否通过 1 通过， 0 未通过 */			passed(2,Types.INTEGER,false),
		/** 0 未删除，1 已删除 [DV=>0] */			deleted(2,Types.INTEGER,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}