package com.aobei.train.model;

import com.aobei.train.model.AuthRoleResExample.Criteria;
import com.github.liyiorg.mbg.support.example.CInterface;
import com.github.liyiorg.mbg.support.example.CItem;
import com.github.liyiorg.mbg.support.example.ColumnListAble;
import com.github.liyiorg.mbg.support.example.MbgExample;
import com.github.liyiorg.mbg.support.example.MbgGeneratedCriteria;
import com.github.liyiorg.mbg.support.example.PaginationAble;
import com.github.liyiorg.mbg.util.CUtil;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

@SuppressWarnings("unused")
public class AuthRoleResExample extends MbgExample<Criteria> implements PaginationAble, Serializable, ColumnListAble {
    
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auth_role__res
     *
     * @mbg.generated Wed Mar 21 14:00:25 CST 2018
     */
    public AuthRoleResExample() {
        databaseType = "MySQL";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auth_role__res
     *
     * @mbg.generated Wed Mar 21 14:00:25 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auth_role__res
     *
     * @mbg.generated Wed Mar 21 14:00:25 CST 2018
     */
    public void includeColumns(C... cs) {
        CUtil.includeColumns(C.class, this, cs);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auth_role__res
     *
     * @mbg.generated Wed Mar 21 14:00:25 CST 2018
     */
    public void excludeColumns(C... cs) {
        CUtil.excludeColumns(C.class, this, cs);
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table auth_role__res
     *
     * @mbg.generated Wed Mar 21 14:00:25 CST 2018
     */
    protected abstract static class GeneratedCriteria extends MbgGeneratedCriteria {

        public Criteria andRole_idIsNull() {
            addCriterion("role_id is null");
            return (Criteria) this;
        }

        public Criteria andRole_idIsNotNull() {
            addCriterion("role_id is not null");
            return (Criteria) this;
        }

        public Criteria andRole_idEqualTo(Long value) {
            addCriterion("role_id =", value, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idNotEqualTo(Long value) {
            addCriterion("role_id <>", value, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idGreaterThan(Long value) {
            addCriterion("role_id >", value, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idGreaterThanOrEqualTo(Long value) {
            addCriterion("role_id >=", value, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idLessThan(Long value) {
            addCriterion("role_id <", value, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idLessThanOrEqualTo(Long value) {
            addCriterion("role_id <=", value, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idIn(List<Long> values) {
            addCriterion("role_id in", values, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idNotIn(List<Long> values) {
            addCriterion("role_id not in", values, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idBetween(Long value1, Long value2) {
            addCriterion("role_id between", value1, value2, "role_id");
            return (Criteria) this;
        }

        public Criteria andRole_idNotBetween(Long value1, Long value2) {
            addCriterion("role_id not between", value1, value2, "role_id");
            return (Criteria) this;
        }

        public Criteria andRes_idIsNull() {
            addCriterion("res_id is null");
            return (Criteria) this;
        }

        public Criteria andRes_idIsNotNull() {
            addCriterion("res_id is not null");
            return (Criteria) this;
        }

        public Criteria andRes_idEqualTo(Integer value) {
            addCriterion("res_id =", value, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idNotEqualTo(Integer value) {
            addCriterion("res_id <>", value, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idGreaterThan(Integer value) {
            addCriterion("res_id >", value, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("res_id >=", value, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idLessThan(Integer value) {
            addCriterion("res_id <", value, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idLessThanOrEqualTo(Integer value) {
            addCriterion("res_id <=", value, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idIn(List<Integer> values) {
            addCriterion("res_id in", values, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idNotIn(List<Integer> values) {
            addCriterion("res_id not in", values, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idBetween(Integer value1, Integer value2) {
            addCriterion("res_id between", value1, value2, "res_id");
            return (Criteria) this;
        }

        public Criteria andRes_idNotBetween(Integer value1, Integer value2) {
            addCriterion("res_id not between", value1, value2, "res_id");
            return (Criteria) this;
        }

        public Criteria andNoneIsNull() {
            addCriterion("none is null");
            return (Criteria) this;
        }

        public Criteria andNoneIsNotNull() {
            addCriterion("none is not null");
            return (Criteria) this;
        }

        public Criteria andNoneEqualTo(String value) {
            addCriterion("none =", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotEqualTo(String value) {
            addCriterion("none <>", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneGreaterThan(String value) {
            addCriterion("none >", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneGreaterThanOrEqualTo(String value) {
            addCriterion("none >=", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLessThan(String value) {
            addCriterion("none <", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLessThanOrEqualTo(String value) {
            addCriterion("none <=", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLike(String value) {
            addCriterion("none like", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotLike(String value) {
            addCriterion("none not like", value, "none");
            return (Criteria) this;
        }

        public Criteria andNoneIn(List<String> values) {
            addCriterion("none in", values, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotIn(List<String> values) {
            addCriterion("none not in", values, "none");
            return (Criteria) this;
        }

        public Criteria andNoneBetween(String value1, String value2) {
            addCriterion("none between", value1, value2, "none");
            return (Criteria) this;
        }

        public Criteria andNoneNotBetween(String value1, String value2) {
            addCriterion("none not between", value1, value2, "none");
            return (Criteria) this;
        }

        public Criteria andNoneLikeInsensitive(String value) {
            addCriterion("upper(none) like", value.toUpperCase(), "none");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table auth_role__res
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 21 14:00:25 CST 2018
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {
        
        private static final long serialVersionUID = 1L;

        protected Criteria() {
            super();
        }
    }

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table auth_role__res
     *
     * @mbg.generated Wed Mar 21 14:00:25 CST 2018
     */
    public enum C implements CInterface {
        //--------------------------------------------------
		//[TABLE]	权限管理  角色资源中间表
		//--------------------------------------------------
		/** 角色ID */			role_id(1,Types.BIGINT,false),
		/** 资源ID */			res_id(1,Types.INTEGER,false),
		/** 无用字段 */			none(2,Types.VARCHAR,false);

        private final CItem C_I_T_E_M;

        private C(int type, int jdbcType, boolean delimited) {
            C_I_T_E_M = new CItem(type, jdbcType, delimited, name(), null , "`", "`");
        }

        public int getType() {
            return C_I_T_E_M.getType();
        }

        public int getJdbcType() {
            return C_I_T_E_M.getJdbcType();
        }

        public boolean isDelimited() {
            return C_I_T_E_M.isDelimited();
        }

        public String delimitedName() {
            return C_I_T_E_M.delimitedName();
        }

        public String delimitedAliasName() {
            return C_I_T_E_M.delimitedAliasName();
        }
    }
}